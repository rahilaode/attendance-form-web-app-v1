name: Deploy Staging ðŸš€

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-staging:
    name: Deploy to staging server
    runs-on: ubuntu-latest
    needs: build-testing

    steps:
      - name: Execute deployment command
        uses: appleboy/ssh-action@v1.0.3
        env:
          APP_PATH: ${{ vars.APP_PATH }}
          GIT_URL: ${{ secrets.GIT_URL }}
          POSTGRES_USER: ${{ secrets.DB_USER_STAGING }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASWORD_STAGING }}
          POSTGRES_DB: ${{ secrets.DB_DBNAME_STAGING }}
          POSTGRES_HOST: ${{ secrets.DB_HOST_STAGING }}
          POSTGRES_PORT: ${{ vars.DB_PORT_STAGING }}

        with:
          host: ${{ secrets.SSH_HOST_STAGING }}
          username: ${{ vars.SSH_USER_NAME_STAGING }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
          envs: APP_PATH, GIT_URL, BRANCH_NAME, POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB, POSTGRES_HOST, POSTGRES_PORT
          script: |

            # Add known hosts
            ssh-keyscan github.com > ~/.ssh/known_hosts

            # Clone Repository
            git clone $GIT_URL

            # Going to app directory
            cd $APP_PATH

            # Create env
            echo "POSTGRES_USER=$POSTGRES_USER" >> .env
            echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" >> .env
            echo "POSTGRES_DB=$POSTGRES_DB" >> .env
            echo "POSTGRES_HOST=$POSTGRES_HOST" >> .env
            echo "POSTGRES_PORT=$POSTGRES_PORT" >> .env

            # Run app
            docker compose up -f docker-compose-staging.yaml --build --detach

            # Remove unused docker data
            docker system prune -a -f